AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Event Bridge Demo
  
Globals:
  Function:
    Timeout: 3

Resources:
  EventBridge-SAM-SampleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: EventBridge-SAM-Sample/
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - events:PutEvents      

  invoiceServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: invoiceService/
      Handler: app.lambda_handler
      Runtime: python3.8

  EventRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "EventRule"
      EventPattern: 
        source: 
          - "demo.orders"
        detail: 
          state: 
            - "created"
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "invoiceServiceFunction"
              - "Arn"
          Id: "invoiceServiceTarget"

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "invoiceServiceFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "EventRule"
          - "Arn"

# Outputs:
#   HelloWorldApi:
#     Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#   HelloWorldFunction:
#     Description: "Hello World Lambda Function ARN"
#     Value: !GetAtt HelloWorldFunction.Arn
#   HelloWorldFunctionIamRole:
#     Description: "Implicit IAM Role created for Hello World function"
#     Value: !GetAtt HelloWorldFunctionRole.Arn
